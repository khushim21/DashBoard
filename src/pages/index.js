import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import Sider from './../components/Sider';
import Search from './../components/Search';
import Card from './../components/Card';
import PieChart from './../components/Pie';
import StackedBar from './../components/StackedBar';

const inter = Inter({ subsets: ['latin'] })

export default function Home({data, piedata}) {



  var byTypePercent = piedata.result.map((item) => item.percent)
  var byTypeTitle = piedata.result.map((item) => item.title)
  
  console.log(piedata.result[2])
  var spinning = piedata.result[0].month
  var trans = piedata.result[1].month
  var carding = piedata.result[2].month
  var heatCool = piedata.result[3].month

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <div className=" w-screen min-h-screen max-h-full flex">
        <Sider/>
        <div className="w-screen h-[66px]">
        <Search/>
        <div className="mx-auto grid grid-cols-4 gap-1 mt-[22px] max-w-[1145px] pl-[30px] pr-[20px]">
          {
            data.result.map((item) => {
              return (
                <Card
                key={item.heading} 
                heading={item.heading}
                data={item.data}
                netChange={item.netChange}
                />
              )
            })
            }
        </div>

        <div className="flex max-w-[1145px] mx-auto pl-[15px] pr-[20px]">

        <StackedBar
        spinning={spinning}
        trans={trans}
        carding={carding}
        heatCool={heatCool}
        />


            <PieChart
            piedata={byTypePercent}
            piedataTitle={byTypeTitle}
            />
        </div>
        </div>
      </div>
    </>
  )
}


export async function getServerSideProps() {
 
  const res = await fetch(`${process.env.PORT}/api/data`)
  const data = await res.json()

  const resPieData = await fetch(`${process.env.PORT}/api/byType`)
  const piedata = await resPieData.json()
  
  return { props: { data, piedata } }
}



